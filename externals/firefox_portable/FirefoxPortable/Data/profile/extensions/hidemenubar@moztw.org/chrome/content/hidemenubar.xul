<?xml version="1.0"?>
<overlay id="hideMenubarOverlay" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<script type="application/x-javascript" src="chrome://global/content/nsUserSettings.js"/>
<script type="application/x-javascript">
<![CDATA[
window.addEventListener("load",
   function(event) {
      function hookCode(orgFunc, orgCode, myCode) {
         try{ if (eval(orgFunc).toString() == eval(orgFunc + "=" + eval(orgFunc).toString().replace(orgCode, myCode))) throw orgFunc; }
         catch(e){ Components.utils.reportError("Failed to hook function: "+orgFunc); }
      }
      var strBundle = Components.classes['@mozilla.org/intl/stringbundle;1'].getService(Components.interfaces.nsIStringBundleService)
                     .createBundle('chrome://hidemenubar/locale/hidemenubar.properties');

      var menubox = document.getElementById("menubar-items");
      var toolbar = menubox.parentNode;
      var menubar = menubox.firstChild;
      var toolbox = toolbar.parentNode;

      toolbar.setAttribute("toolbarname", strBundle.GetStringFromName("menubarCmd.label"));
      toolbar.setAttribute("accesskey", strBundle.GetStringFromName("menubarCmd.accesskey"));

      hookCode("onViewToolbarsPopupShowing", '&& type != "menubar"', '');
      hookCode("onViewToolbarsPopupShowing", 'toolbar.getAttribute("collapsed") != "true"', '!(toolbar.id == "'+toolbar.id+'" ? toolbar.autohide : toolbar.collapsed)');
      hookCode("onViewToolbarCommand", 'document.persist(toolbar.id, "collapsed");', 'if (toolbar.id == "'+toolbar.id+'") { toolbar.autohide = toolbar.collapsed; if (toolbar.collapsed) return; } $&');

      [
        ["navigator-toolbox", "BrowserCustomizeToolbar", "BrowserToolboxCustomizeDone"] //Firefox
       ,["mail-toolbox", "CustomizeMailToolbar", "MailToolboxCustomizeDone"] //Thunderbrid
      ].forEach( function(element) {
         var [id, customizeFunc, customizeDoneFunc] = element;
         var toolbox = document.getElementById(id);
         if (toolbox) {
            // hook CustomizeToolbar
            hookCode(customizeFunc, /{/, function() {
               var toolbox = document.getElementById("TOOLBOX_ID");
               for (var i=0; i<toolbox.childNodes.length; i++) {
                  var bar = toolbox.childNodes[i];
                  if (bar.getAttribute("customizable")=="true") {
                     bar.setAttribute("customizing-collapsed", bar.collapsed);
                     bar.collapsed = false;
                  }
               }
            }.toString().replace(/^.*{/,"{").replace(/.*}$/,"").replace("TOOLBOX_ID",id));
            // hook CustomizeToolbarDone
            hookCode(customizeDoneFunc, /}$/, function() {
               var toolbox = document.getElementById("TOOLBOX_ID");
               for (var i=0; i<toolbox.childNodes.length; i++) {
                  var bar = toolbox.childNodes[i];
                  if (bar.hasAttribute("customizing-collapsed")) {
                     if (bar.getAttribute("customizing-collapsed")=="true") bar.collapsed = true;
                     bar.removeAttribute("customizing-collapsed");
                  }
               }
            }.toString().replace(/^.*{/,"").replace(/.*}$/,"}").replace("TOOLBOX_ID",id));
         }
      });

      if (typeof(FullScreen)!='undefined') {
         hookCode("FullScreen.toggle", /}$/, 'setTimeout(function(){ toolbar.collapsed = (window.fullScreen ? true : toolbar.autohide); }, 0); $&');
         hookCode("FullScreen.mouseoverToggle", /}$/, 'toolbar.collapsed = (window.fullScreen ? true : toolbar.autohide); $&');
         toolbar.setAttribute("fullscreentoolbar", "true");
      }

      toolbar.__defineGetter__("collapsed",
         function(){
            var attr = (window.fullScreen ? "moz-collapsed" : "collapsed");
            return this.hasAttribute(attr) && (this.getAttribute(attr) == "true");
         }
      );
      toolbar.__defineSetter__("collapsed",
         function(){
            this.setAttribute("toggling", true);
            var attr = (window.fullScreen ? "moz-collapsed" : "collapsed");
            if (arguments[0]) {
               this.setAttribute(attr, true);
            } else {
               this.removeAttribute("moz-collapsed");
               this.removeAttribute("collapsed");
            }
            if (window.fullScreen && FullScreen._isChromeCollapsed) {
               var toggler = document.getElementById("fullscr-toggler");
               if (arguments[0]) {
                  toggler.removeAttribute("moz-collapsed");
               } else {
                  toggler.setAttribute("moz-collapsed", true);
               }
            }
            this.removeAttribute("toggling");
         }
      );

      toolbar.__defineGetter__("autohide",
         function(){
            return nsPreferences.getBoolPref("hidemenubar.autohide", true);
         }
      );
      toolbar.__defineSetter__("autohide",
         function(){
            nsPreferences.setBoolPref("hidemenubar.autohide", arguments[0]);
         }
      );

      toolbar.addEventListener("DOMAttrModified",
         function(event){
            if (event.target != this) return;
            if (event.attrName=="collapsed" || event.attrName=="moz-collapsed" || event.attrName=="customizing-collapsed") {
               if (!this.hasAttribute("toggling")) {
                  if (this.collapsed != this.autohide) this.collapsed = this.autohide;
               }
            }
         }
      , true);

      toolbar.collapsed = toolbar.autohide;

      window.addEventListener("keydown",
         function(event){
            if ((event.keyCode == 18) && !event.ctrlKey && !event.shiftKey && !event.metaKey) {
               toolbar.altKey = true;
            } else {
               toolbar.altKey = false;
            }
         }
      , true);
      window.addEventListener("keyup",
         function(event){
            if ((event.keyCode == 18) && !event.ctrlKey && !event.shiftKey && !event.metaKey) {
               if (toolbar.altKey && (toolbar.autohide || window.fullScreen)) {
                  toolbar.collapsed = !toolbar.collapsed;
               }
            }
            toolbar.altKey = false;
         }
      , true);
      window.addEventListener("keypress",
         function(event){
            if (toolbar.collapsed) {
               if (event.altKey) {
                  for (var i=0; i<menubar.childNodes.length; i++) {
                     var m = menubar.childNodes[i];
                     var a = m.getAttribute("accesskey").toLowerCase();
                     var c = String.fromCharCode(event.charCode);
                     if ((m.localName == "menu") && (a == c)) {
                        toolbar.collapsed = false;
                        m.lastChild.showPopup();
                        event.stopPropagation();
                        break;
                     }
                  }
               } else
               if (event.keyCode == 121) {
                  toolbar.collapsed = false;
               }
            }
            toolbar.altKey = false;
         }
      , true);

      function isSubMenu(m){
         while (m = m.parentNode) {
            if (m.localName == "menupopup" || m.localName == "popup") return true;
         }
         return false;
      }

      function tryHideMenubar(){
         setTimeout(function(){
            if ((!toolbar.autohide) && (!window.fullScreen)) return;
            if (toolbar.hasMouseOver || toolbar.hasPopup || toolbar.collapsed || toolbar.altKey) return;
            if (toolbar.hasAttribute("customizing-collapsed")) return;
            for (var i=0; i<menubar.childNodes.length; i++) {
               if (menubar.childNodes[i].getAttribute("_moz-menuactive")) return;
            }
            toolbar.collapsed = true;
         }, nsPreferences.getIntPref("hidemenubar.autohide.delay", 100));
      }

      window.addEventListener("popupshown",
         function(event){
            if (isSubMenu(event.target)) return;
            if (event.target.localName != "menupopup" && event.target.localName != "popup") return;
            toolbar.hasPopup = true;
         }
      , true);
      window.addEventListener("popuphidden",
         function(event){
            if (isSubMenu(event.target)) return;
            if (event.target.localName != "menupopup" && event.target.localName != "popup") return;
            toolbar.hasPopup = false;
            tryHideMenubar();
         }
      , true);

      toolbar.addEventListener("mouseover",
         function(event){
            toolbar.hasMouseOver = true;
         }
      , true);
      toolbar.addEventListener("mouseout",
         function(event){
            toolbar.hasMouseOver = false;
            tryHideMenubar();
         }
      , true);

      menubar.addEventListener("DOMMenuItemInactive",
         function(event){
            if (event.target.parentNode != this) return;
            tryHideMenubar();
         }
      , true);

      window.addEventListener("mousemove",
         function(event){
            if (!toolbar.beginShowing && (nsPreferences.getBoolPref("hidemenubar.autoshow", false))
               && (event.clientY >= toolbar.boxObject.y)
               && (event.clientY < toolbar.boxObject.y+nsPreferences.getIntPref("hidemenubar.autoshow.margin-top", 25))
               ) {
               toolbar.beginShowing = setTimeout(function(){
                  if (toolbar.beginShowing) {
                     toolbar.collapsed = false;
                     toolbar.beginShowing = null;
                  }
               }, nsPreferences.getIntPref("hidemenubar.autoshow.delay", 1000));
            }
         }
      , true);

      window.addEventListener("mouseout",
         function(event){
            if (toolbar.beginShowing) {
               clearTimeout(toolbar.beginShowing);
               tryHideMenubar();
               toolbar.beginShowing = null;
            }
         }
      , true);

   }
, false);
]]>
</script>

</overlay>
